
#include <Servo.h>



//creating servo objects
//Hip is top most servo
Servo blHIP;
Servo brHIP;
Servo flHIP;
Servo frHIP;

//Knee is mid servo
Servo blKNEE;
Servo brKNEE;
Servo flKNEE;
Servo frKNEE;

//Ankle is bottom most servo
Servo blANKLE;
Servo brANKLE;
Servo flANKLE;
Servo frANKLE;

void setup()
{
  //servo port locations
  //Home is the down laying postion for the dog
  //Currently all other postions based off home
  //using mathematical functions
  //maybe change in the future to be based
  //off other known postions or create
  //a variable for each individual postion

//FIX HIP POSITIONS
  blHIP.attach(13);
  brHIP.attach(12);
  flHIP.attach(11);
  frHIP.attach(10);
  int blhHOME = 80;
  int brhHOME = 80;
  int flhHOME = 75;
  int frhHOME = 95;

  blKNEE.attach(9);
  brKNEE.attach(8);
  flKNEE.attach(7);
  frKNEE.attach(6);
  int blkHOME = 115;
  int brkHOME = 45;
  int flkHOME = 105;
  int frkHOME = 60;
 //int blkHOME = 100;
//  int brkHOME = 60;
//  int flkHOME = 90;
//  int frkHOME = 75;


  blANKLE.attach(5);
  brANKLE.attach(4);
  flANKLE.attach(3);
  frANKLE.attach(1);
  int blaHOME = 0;
  int braHOME = 180;
  int flaHOME = 0;
  int fraHOME = 140;
  //int blaHOME = 0;
 // int braHOME = 180;
//  int flaHOME = 0;
 // int fraHOME = 140;
  blHIP.write(blhHOME);
  brHIP.write(brhHOME);
  flHIP.write(flhHOME);
  frHIP.write(frhHOME);

  //blKNEE.write(blkHOME);
  //brKNEE.write(brkHOME);
  // flKNEE.write(flkHOME);
  // frKNEE.write(frkHOME);
  // 15 is moderate, 40 too much, 30 for a high stand

  //STANDING POSITIONS
  blKNEE.write(70);
  brKNEE.write(90);
  flKNEE.write(60);
  frKNEE.write(105);


  //blANKLE.write(blaHOME);
  //brANKLE.write(braHOME);
  //flANKLE.write(flaHOME);
  //frANKLE.write(fraHOME);
  //50 degrees for high stand

  //STANDING POSITIONS
  blANKLE.write(40);
  brANKLE.write(130);
  flANKLE.write(40);
  frANKLE.write(90);
  //blANKLE.write(50);
 // brANKLE.write(130);
 // flANKLE.write(50);
 // frANKLE.write(90);

  //WALKING V1
  /*delay(5000);
    for (;;) {
    blANKLE.write(blaHOME+65);
    brANKLE.write(braHOME-65);
    flANKLE.write(flaHOME+65);
    frANKLE.write(fraHOME-65);
    blKNEE.write(blkHOME-45);
    brKNEE.write(brkHOME+45);
    flKNEE.write(flkHOME-45);
    frKNEE.write(frkHOME+45);
    delay(500);
    blANKLE.write(blaHOME+50);
    brANKLE.write(braHOME-50);
    flANKLE.write(flaHOME+50);
    frANKLE.write(fraHOME-50);

    flKNEE.write(flkHOME-30);
    frKNEE.write(frkHOME+30);
    delay(500);
    }
  */
  /*
    delay(5000);
    while(1) {
    blANKLE.write(blaHOME + 50);
    blKNEE.write(blkHOME - 15);
    frANKLE.write(fraHOME - 50);
    frKNEE.write(frkHOME + 30);
    brANKLE.write(braHOME - 65);
    brKNEE.write(brkHOME + 30);
    flANKLE.write(flaHOME + 65);
    flKNEE.write(flkHOME - 45);

    delay(450);
    blANKLE.write(blaHOME + 65);
    blKNEE.write(blkHOME - 30);
    frANKLE.write(fraHOME - 65);
    frKNEE.write(frkHOME + 45);
    brANKLE.write(braHOME - 50);
    brKNEE.write(brkHOME + 15);
    flANKLE.write(flaHOME + 50);
    flKNEE.write(flkHOME - 30);
    delay(450);
    }
  */
  /*
    while(1) {
    blANKLE.write(blaHOME + 65);
    blKNEE.write(blkHOME - 30);
    frANKLE.write(fraHOME - 65);
    frKNEE.write(frkHOME + 45);
    brANKLE.write(braHOME - 50);
    brKNEE.write(brkHOME + 15);
    flANKLE.write(flaHOME + 50);
    flKNEE.write(flkHOME - 30);
    delay(500);
    blANKLE.write(blaHOME + 50);
    blKNEE.write(blkHOME - 15);
    frANKLE.write(fraHOME - 50);
    frKNEE.write(frkHOME + 30);
    brANKLE.write(braHOME - 65);
    brKNEE.write(brkHOME + 30);
    flANKLE.write(flaHOME + 65);
    flKNEE.write(flkHOME - 45);
    delay(500);
    }
  */


  //V3 Walking prototype
/*
   delay(5000);

  while (1) {
    delay(250);

    flANKLE.write(flaHOME + 10);
    flKNEE.write(flkHOME - 15);
    brANKLE.write(braHOME - 10);
    brKNEE.write(brkHOME + 15);

    delay(250);

    flKNEE.write(flkHOME - 40);
    brKNEE.write(brkHOME + 40);

    

    flANKLE.write(flaHOME + 45);
    brANKLE.write(braHOME - 45);

   // delay(250);


   // blANKLE.write(blaHOME + 55);
  //  frANKLE.write(fraHOME - 55);

    delay(250);
    
    flKNEE.write(flkHOME - 30);
    brKNEE.write(brkHOME + 30);
    flANKLE.write(flaHOME + 25);
    brANKLE.write(braHOME - 25);
    
    delay(250);
    
    blANKLE.write(blaHOME + 10);
    blKNEE.write(blkHOME - 15);
    frANKLE.write(fraHOME - 10);
    frKNEE.write(frkHOME + 15);

    delay(250);
    
    blKNEE.write(blkHOME - 40);
    frKNEE.write(frkHOME + 40);

   

    blANKLE.write(blaHOME + 45);
    frANKLE.write(fraHOME - 45);

   // delay(250);


 //   flANKLE.write(flaHOME + 55);
  //  brANKLE.write(braHOME - 55);
//was 45 before but wanted to see if puting it equal with the code for the otherside would work
//now that the legs are more equal to each other.
delay (250);
   frKNEE.write(frkHOME + 30);
    blKNEE.write(blkHOME - 30);
    frANKLE.write(fraHOME - 25);
    blANKLE.write(blaHOME + 25);
    
    
  }
  */
  //V3.5 maybe
   
  delay(5000);
  while (1) {


    delay(150);

   flANKLE.write(40);
    brANKLE.write(125);

    delay(10);

    flKNEE.write(55);  
    brKNEE.write(95); 
    
 
    delay(150);

    flKNEE.write(60);
    brKNEE.write(90);

delay(150);

    flANKLE.write(60);
    brANKLE.write(115);
    //was 45 and 135
    








    delay(150);

    blANKLE.write(50);
    frANKLE.write(95);
    
    delay(10);

    blKNEE.write(65);
    frKNEE.write(110);
   

    delay(150);
    
    blKNEE.write(70);
    frKNEE.write(105);

   delay(150);

    blANKLE.write(60);
    frANKLE.write(75);
//was 45 and 90
  }
 



}


void loop()
{


}
