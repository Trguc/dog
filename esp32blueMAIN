
#include <Servo_ESP32.h>
#include "BluetoothSerial.h"
#if !defined(CONFIG_BT_ENABLED) || !defined(CONFIG_BLUEDROID_ENABLED)
#error Bluetooth is not enabled! Please run `make menuconfig` to and enable it
#endif
BluetoothSerial SerialBT;
//creating servo objects
//Hip is top most servo
Servo_ESP32 blHIP;
Servo_ESP32 brHIP;
Servo_ESP32 flHIP;
Servo_ESP32 frHIP;

//Knee is mid servo
Servo_ESP32 blKNEE;
Servo_ESP32 brKNEE;
Servo_ESP32 flKNEE;
Servo_ESP32 frKNEE;

//Ankle is bottom most servo
Servo_ESP32 blANKLE;
Servo_ESP32 brANKLE;
Servo_ESP32 flANKLE;
Servo_ESP32 frANKLE;
int val;
char incomingChar;
String message = "";
int blhHOME = 88;//80
int brhHOME = 76;//80
int flhHOME = 70;//75
int frhHOME = 100;//95
int blkHOME = 115;
int brkHOME = 45;
int flkHOME = 105;
int frkHOME = 60;
int blaHOME = 0;
int braHOME = 180;
int flaHOME = 0;
int fraHOME = 140;
void setup()
{
  Serial.begin(115200);
    SerialBT.begin();
  Serial.println("Bluetooth Started! Ready to pair...");
  //servo port locations
  //Home is the down laying postion for the dog
  //Currently all other postions based off home
  //using mathematical functions
  //maybe change in the future to be based
  //off other known postions or create
  //a variable for each individual postion

  //FIX HIP POSITIONS
  blHIP.attach(32);
  brHIP.attach(33);
  flHIP.attach(25);
  frHIP.attach(26);
  int blhHOME = 88;//80
  int brhHOME = 76;//80
  int flhHOME = 70;//75
  int frhHOME = 100;//95

  blKNEE.attach(27);
  brKNEE.attach(14);
  flKNEE.attach(19);
  frKNEE.attach(18);
  int blkHOME = 115;
  int brkHOME = 45;
  int flkHOME = 105;
  int frkHOME = 60;
  //int blkHOME = 100;
  //  int brkHOME = 60;
  //  int flkHOME = 90;
  //  int frkHOME = 75;


  blANKLE.attach(5);
  brANKLE.attach(17);
  flANKLE.attach(16);
  frANKLE.attach(4);
  int blaHOME = 0;
  int braHOME = 180;
  int flaHOME = 0;
  int fraHOME = 140;
  //int blaHOME = 0;
  // int braHOME = 180;
  //  int flaHOME = 0;
  // int fraHOME = 140;
  blHIP.write(blhHOME);
  brHIP.write(brhHOME);
  flHIP.write(flhHOME);
  frHIP.write(frhHOME);

  //blKNEE.write(blkHOME);
  //brKNEE.write(brkHOME);
  // flKNEE.write(flkHOME);
  // frKNEE.write(frkHOME);
  // 15 is moderate, 40 too much, 30 for a high stand

  //STANDING POSITIONS
  blKNEE.write(70);
  brKNEE.write(77);
  flKNEE.write(60);
  frKNEE.write(105);


  //blANKLE.write(blaHOME);
  //brANKLE.write(braHOME);
  //flANKLE.write(flaHOME);
  //frANKLE.write(fraHOME);
  //50 degrees for high stand

  //STANDING POSITIONS
  blANKLE.write(40);
  brANKLE.write(130);
  flANKLE.write(40);
  frANKLE.write(90);
  //blANKLE.write(50);
  // brANKLE.write(130);
  // flANKLE.write(50);
  // frANKLE.write(90);

  //WALKING V1
  /*delay(5000);
    for (;;) {
    blANKLE.write(blaHOME+65);
    brANKLE.write(braHOME-65);
    flANKLE.write(flaHOME+65);
    frANKLE.write(fraHOME-65);
    blKNEE.write(blkHOME-45);
    brKNEE.write(brkHOME+45);
    flKNEE.write(flkHOME-45);
    frKNEE.write(frkHOME+45);
    delay(500);
    blANKLE.write(blaHOME+50);
    brANKLE.write(braHOME-50);
    flANKLE.write(flaHOME+50);
    frANKLE.write(fraHOME-50);

    flKNEE.write(flkHOME-30);
    frKNEE.write(frkHOME+30);
    delay(500);
    }
  */
  /*
    delay(5000);
    while(1) {
    blANKLE.write(blaHOME + 50);
    blKNEE.write(blkHOME - 15);
    frANKLE.write(fraHOME - 50);
    frKNEE.write(frkHOME + 30);
    brANKLE.write(braHOME - 65);
    brKNEE.write(brkHOME + 30);
    flANKLE.write(flaHOME + 65);
    flKNEE.write(flkHOME - 45);

    delay(450);
    blANKLE.write(blaHOME + 65);
    blKNEE.write(blkHOME - 30);
    frANKLE.write(fraHOME - 65);
    frKNEE.write(frkHOME + 45);
    brANKLE.write(braHOME - 50);
    brKNEE.write(brkHOME + 15);
    flANKLE.write(flaHOME + 50);
    flKNEE.write(flkHOME - 30);
    delay(450);
    }
  */
  /*
    while(1) {
    blANKLE.write(blaHOME + 65);
    blKNEE.write(blkHOME - 30);
    frANKLE.write(fraHOME - 65);
    frKNEE.write(frkHOME + 45);
    brANKLE.write(braHOME - 50);
    brKNEE.write(brkHOME + 15);
    flANKLE.write(flaHOME + 50);
    flKNEE.write(flkHOME - 30);
    delay(500);
    blANKLE.write(blaHOME + 50);
    blKNEE.write(blkHOME - 15);
    frANKLE.write(fraHOME - 50);
    frKNEE.write(frkHOME + 30);
    brANKLE.write(braHOME - 65);
    brKNEE.write(brkHOME + 30);
    flANKLE.write(flaHOME + 65);
    flKNEE.write(flkHOME - 45);
    delay(500);
    }
  */


  //V3 Walking prototype
  /*
     delay(5000);

    while (1) {
      delay(250);

      flANKLE.write(flaHOME + 10);
      flKNEE.write(flkHOME - 15);
      brANKLE.write(braHOME - 10);
      brKNEE.write(brkHOME + 15);

      delay(250);

      flKNEE.write(flkHOME - 40);
      brKNEE.write(brkHOME + 40);



      flANKLE.write(flaHOME + 45);
      brANKLE.write(braHOME - 45);

     // delay(250);


     // blANKLE.write(blaHOME + 55);
    //  frANKLE.write(fraHOME - 55);

      delay(250);

      flKNEE.write(flkHOME - 30);
      brKNEE.write(brkHOME + 30);
      flANKLE.write(flaHOME + 25);
      brANKLE.write(braHOME - 25);

      delay(250);

      blANKLE.write(blaHOME + 10);
      blKNEE.write(blkHOME - 15);
      frANKLE.write(fraHOME - 10);
      frKNEE.write(frkHOME + 15);

      delay(250);

      blKNEE.write(blkHOME - 40);
      frKNEE.write(frkHOME + 40);



      blANKLE.write(blaHOME + 45);
      frANKLE.write(fraHOME - 45);

     // delay(250);


    //   flANKLE.write(flaHOME + 55);
    //  brANKLE.write(braHOME - 55);
    //was 45 before but wanted to see if puting it equal with the code for the otherside would work
    //now that the legs are more equal to each other.
    delay (250);
     frKNEE.write(frkHOME + 30);
      blKNEE.write(blkHOME - 30);
      frANKLE.write(fraHOME - 25);
      blANKLE.write(blaHOME + 25);


    }
  */
  //V3.5 maybe
  /*
    delay(5000);
    while (1) {


    delay(150);

    flANKLE.write(40);
    brANKLE.write(130);

    delay(10);

    flKNEE.write(55);
    brKNEE.write(82); //95


    delay(150);

    flKNEE.write(60);
    brKNEE.write(77);//90

    delay(150);

    flANKLE.write(60);
    brANKLE.write(115);
    //was 45 and 135









    delay(150);

    blANKLE.write(50);
    frANKLE.write(100);

    delay(10);

    blKNEE.write(65);
    frKNEE.write(105);


    delay(150);

    blKNEE.write(70);
    frKNEE.write(100);

    delay(150);

    blANKLE.write(70);
    frANKLE.write(82);
    //was 45 and 90
    }
  */

  // V6.32
  /*
    delay(5000);
    while (1) {


      delay(150);

     flANKLE.write(40);
      brANKLE.write(130);

      delay(10);

      flKNEE.write(60);
      brKNEE.write(77); //95


      delay(150);

      flKNEE.write(55);
      brKNEE.write(82);//90

    delay(150);

      flANKLE.write(60);
      brANKLE.write(115);
      //was 45 and 135









      delay(150);

      blANKLE.write(50);
      frANKLE.write(100);

      delay(10);

      blKNEE.write(70);
      frKNEE.write(100);


      delay(150);

      blKNEE.write(65);
      frKNEE.write(105);

     delay(150);

      blANKLE.write(70);
      frANKLE.write(82);
    //was 45 and 90
    }
  */

}


void loop()
{
 if (SerialBT.available()){
    char incomingChar = SerialBT.read();
    if (incomingChar != '\n'){
      message += String(incomingChar);
    }
    else{
      message = "";
    }
    Serial.write(incomingChar);  
  }
  // Check received message and control output accordingly
 if (message == "w") //if value input is equals to w

    {
      for (int i = 0; i < 10; i++) {

        delay(150);

        flANKLE.write(40);
        brANKLE.write(130);

        delay(10);

        flKNEE.write(55);
        brKNEE.write(82); //95


        delay(150);

        flKNEE.write(60);
        brKNEE.write(77);//90

        delay(150);

        flANKLE.write(60);
        brANKLE.write(115);
        //was 45 and 135









        delay(150);

        blANKLE.write(50);
        frANKLE.write(100);

        delay(10);

        blKNEE.write(65);
        frKNEE.write(105);


        delay(150);

        blKNEE.write(70);
        frKNEE.write(100);

        delay(150);

        blANKLE.write(70);
        frANKLE.write(82);
        
        //was 45 and 90
      }
        flANKLE.write(40);
        brANKLE.write(130);
         flKNEE.write(55);
        brKNEE.write(82);
         blANKLE.write(50);
        frANKLE.write(100);
           blKNEE.write(65);
        frKNEE.write(105);
    }

    if (message == "f") { //sit
      blHIP.write(88);
      brHIP.write(76);
      blANKLE.write(0);
      brANKLE.write(180);
      flKNEE.write(60);
      frKNEE.write(105);
      flANKLE.write(40);
      frANKLE.write(90);
    }
    if (message == "g") { //lay
      blHIP.write(blhHOME);
      brHIP.write(brhHOME);
      flHIP.write(flhHOME);
      frHIP.write(frhHOME);
      blKNEE.write(blkHOME);
      brKNEE.write(brkHOME);
      flKNEE.write(flkHOME);
      frKNEE.write(frkHOME);
      blANKLE.write(blaHOME);
      brANKLE.write(braHOME);
      flANKLE.write(flaHOME);
      frANKLE.write(fraHOME);
    }
    if (message == "t") { //stand
      blKNEE.write(70);
      brKNEE.write(77);
      flKNEE.write(60);
      frKNEE.write(105);
      blANKLE.write(40);
      brANKLE.write(130);
      flANKLE.write(40);
      frANKLE.write(90);
      blHIP.write(blhHOME);
      brHIP.write(brhHOME);
      flHIP.write(flhHOME);
      frHIP.write(frhHOME);
    }
    if (message == "h") { //shake while standing
      blKNEE.write(70);
      brKNEE.write(87);
      blANKLE.write(40);
      brANKLE.write(125);
      flKNEE.write(40);

      flANKLE.write(80);
      frANKLE.write(100);
      frKNEE.write(160);

    }
    if (message == "a") { //turn left
      for (int i = 0; i < 10; i++) {
        flANKLE.write(30);
        blANKLE.write(40);
        delay(150);


        brANKLE.write(130);

        delay(10);


        brKNEE.write(82); //95


        delay(150);


        brKNEE.write(77);//90

        delay(150);


        brANKLE.write(100);
        //was 45 and 135



        delay(150);


        frANKLE.write(100);

        delay(10);


        frKNEE.write(105);


        delay(150);


        frKNEE.write(100);

        delay(150);


        frANKLE.write(70);
        //was 45 and 90
      }
      brANKLE.write(130);
      brKNEE.write(82); //95
      frANKLE.write(100);
      frKNEE.write(100);
      flANKLE.write(40);
      blANKLE.write(50);


    }

    if (message == "d") { //turn right

      for (int i = 0; i < 10; i++) {
        frANKLE.write(115);
        brANKLE.write(145);
        delay(150);


        blANKLE.write(50);

        delay(10);


        blKNEE.write(65); //95


        delay(150);


        blKNEE.write(70);//90

        delay(150);


        blANKLE.write(80);
        //was 45 and 135



        delay(150);


        flANKLE.write(40);

        delay(10);


        flKNEE.write(55);


        delay(150);


        flKNEE.write(60);

        delay(150);


        flANKLE.write(70);
        //was 45 and 90
      }
      blANKLE.write(50);
      blKNEE.write(65); //95
      flANKLE.write(40);
      flKNEE.write(55);
      frANKLE.write(100);
      brANKLE.write(130);
    }
  if (message == "y") { //lean down
      blKNEE.write(70);
      brKNEE.write(77);
      flKNEE.write(flkHOME);
      frKNEE.write(frkHOME);
      blANKLE.write(40);
      brANKLE.write(130);
      flANKLE.write(flaHOME);
      frANKLE.write(fraHOME);
      blHIP.write(blhHOME);
      brHIP.write(brhHOME);
      flHIP.write(flhHOME);
      frHIP.write(frhHOME);
    }
     if (message == "z") { //tilt left
         flANKLE.write(30);
        blANKLE.write(40);
    }
     if (message == "x") { //tilt right
              frANKLE.write(115);
        brANKLE.write(145);
    }
  delay(20);
  
}
